! profile_columns.list -- determines the contents of star model profiles
! you can use a non-standard version by setting profile_columns_file in your inlist

! units are cgs unless otherwise noted.

! reorder the following names as desired to reorder columns.
! comment out the name to omit a column (fewer columns => less IO => faster running).
! remove '!' to restore a column.

! if you have a situation where you want a non-standard set of columns,
! make a copy of this file, edit as desired, and give the new filename in your inlist
! as profile_columns_file.   if you are just adding columns, you can 'include' this file,
! and just list the additions in your file.   note: to include the standard default
! version, use include '' -- the 0 length string means include the default file.

! if you need to have something added to the list of options, let me know....

! the first few lines of the profile contain general info about the model.
! for completeness, those items are described at the end of this file.

! note: you can include another list by doing
!        include 'filename'
!        include '' means include the default standard list file

! the following lines of the profile contain info for 1 zone per row, surface to center.
   
   zone ! numbers start with 1 at the surface
   !logT ! log10(temperature) at center of zone
   logRho ! log10(density) at center of zone
   !logP ! log10(pressure) at center of zone
   logR ! log10(radius/Rsun) at outer boundary of zone
   !log_radial_depth ! log10 radial distance to surface (cm)
   luminosity ! luminosity at outer boundary of zone (in Lsun units)

   !conv_vel
   !conv_L_div_L
   !log_conv_L_div_L

   !lum_conv_div_lum_rad
   !lum_rad_div_L_Edd
   !lum_conv_div_lum_Edd
   !lum_conv_div_L
   !lum_rad_div_L
   !lum_rad_div_L_Edd_sub_fourPrad_div_PchiT ! density increases outward if this is > 0
      ! see Joss, Salpeter, and Ostriker, "Critical Luminosity", ApJ 181:429-438, 1973. 
   !log_Lrad
   !grav ! gravitational acceleration (cm sec^2)
   !log_g ! log10 gravitational acceleration (cm sec^2)
   !g_div_r ! grav/radius (sec^2)
   !r_div_g ! radius/grav (sec^-2)
   !cgrav_factor ! = cgrav(k)/standard_cgrav
   !eps_grav ! -T*ds/dt (negative for expansion)
   !eps_grav_old ! eps_grav from start of step
   !eps_grav_dm_term_const_q ! advection term, T*(ds/dm)*(dm/dt)_q
   !eps_grav_dt_term_const_q ! fixed relative mass time derivative term, -T*(ds/dt)_q
   
   !log_abs_eps_grav_dm_div_L
   !signed_log_eps_grav ! sign(eps_grav)*log10(max(1,abs(eps_grav)))
   !net_nuclear_energy ! erg/gm/s from nuclear reactions minus all neutrino losses
      ! The value plotted is net_nuclear_energy = sign(val)*log10(max(1,abs(val)))
      ! where val = net nuclear energy minus all neutrino losses.
   !net_energy ! net_energy + eps_grav.
      ! The value plotted is net_energy = sign(val)*log10(max(1,abs(val)))
      ! where val = net nuclear energy plus eps_grav minus all neutrino losses.
   !eps_nuc_plus_nuc_neu
   !logL ! log10(max(1d-2,L/Lsun))
   !log_Ledd ! log10(Leddington/Lsun) -- local Ledd, 4 pi clight G m / kap
   !log_L_div_Ledd ! log10(max(1d-12,L/Leddington))
   !log_Lrad_div_Ledd
   !log_Lrad_div_L
   !velocity ! velocity at outer boundary of zone (cm/s) -- 0 if no velocity variable
   !vel_km_per_s ! velocity at outer boundary of zone (km/s) -- 0 if no velocity variable
   !entropy ! specific entropy divided by (avo*kerg)
   mixing_type ! mixing types are defined in mesa/mlt/public/mlt_def
   !csound ! sound speed
   !v_div_cs ! velocity divided by sound speed
   !v_div_csound ! velocity divided by sound speed
   !total_energy ! v^2/2 - G m / r + E (ergs/g).  negative if bound
   !total_energy_integral ! sum from surface inwards of dm*(v^2/2 - G m / r + E) (ergs)
   !v_div_r ! velocity divided by radius
   !scale_height ! in Rsun units
   !eta ! electron degeneracy parameter (eta >> 1 for significant degeneracy)
   !mu ! mean molecular weight per gas particle (ions + free electrons)
   dm ! cell mass (grams)
   !dm_bar ! boundary mass (grams) average of adjacent dm's
   !logdq ! log10(dq)
   !dq_ratio ! dq(k-1)/dq(k)
   !q ! fraction of star mass interior to outer boundary of this zone
   log_q ! log10(q)
   radius ! radius at outer boundary of zone (in Rsun units)
   !radius_cm ! radius at outer boundary of zone (in centimeters)
   !logR_cm ! log10 radius at outer boundary of zone (in centimeters)
   rmid ! radius at center by mass of zone (in Rsun units)
   !r_div_R ! fraction of total radius
   !temperature ! temperature at center of zone
   !tau ! optical depth
   !logtau ! log10(optical depth) at center of zone
   !pressure ! total pressure at center of zone (pgas + prad)
   !pgas ! gas pressure at center of zone (electrons and ions)
   !pgas_div_ptotal ! pgas/pressure
   !pturb_div_pgas_plus_prad
   !conv_dP_term ! value returned by MLT
   !fourPrad_div_PchiT ! = phi, where 1/phi = 1 + (dPgas/dPrad)|rho 
      ! if phi < Lrad/Ledd, then will get density inversion
      ! see Joss, Salpeter, Ostriker, "Critical Luminosity", ApJ 181: 429-438, 1973.
   !logPgas ! log10(pgas)
   
   !dlnT_dlnE_c_Rho
   !dlnPgas_dlnE_c_Rho
   !dlnP_dlnE_c_Rho
   !dlnT_dlnd_c_E
   !dlnPgas_dlnd_c_E
   !dlnP_dlnd_c_E
   
   !prad ! radiation pressure at center of zone
   !energy ! internal energy (ergs/g)
   !logE ! log10(specific internal energy) at center of zone
   !grada ! dlnT_dlnP at constant S
   !dE_dRho ! at constant T
   !cv ! specific heat at constant volume
   !cp ! specific heat at constant total pressure
   !rho ! density
   !density ! rho
   
   !gamma1 ! dlnP_dlnRho at constant S
   !gamma3 ! gamma3 - 1 = dlnT_dlnRho at constant S
   !theta_e ! electron degeneracy factor for graboske screening
   !free_e ! free_e is mean number of free electrons per nucleon
   !eps_nuc ! ergs/g/sec from nuclear reactions (reaction neutrinos subtracted)
   
   !log_tau_conv_yrs ! timescale for change of conv velocity
   
   !mlt_mixing_length ! mixing length for mlt (cm)
   mlt_mixing_type ! value returned by mlt
   !conv_dP_term
         ! P is increased by factor (1 + conv_dP_term) by inclusion of convective turbulence
   
   !grada_sub_gradT
   !gradT_sub_grada ! gradT-grada at cell boundary 
   !gradT_div_grada ! gradT/grada at cell boundary 

   !gradr_sub_gradT
   !gradT_sub_gradr ! gradT-gradr at cell boundary 
   !gradT_div_gradr ! gradT/gradr at cell boundary 
   !log_gradT_div_gradr ! log10 gradT/gradr at cell boundary 
   
   log_mlt_Gamma ! convective efficiency
   
   !super_ad ! max(0,gradT-grada) at cell boundary 
   log_D_mix ! log10 diffusion coefficient for mixing in units of cm^2/second (Eulerian)
   !log_D_mix_non_rotation
   !conv_vel ! convection velocity (cm/sec)

   log_conv_vel ! log10 convection velocity (cm/sec)
   !log_conv_vel_old ! log10 previous convection velocity (cm/sec)
   !newly_nonconvective
   !conv_vel_div_csound ! convection velocity divided by sound speed
   !conv_vel_div_L_vel ! L_vel is velocity needed to carry L by convection; L = 4*pi*r^2*rho*vel**3
   log_mlt_D_mix ! log10 diffusion coefficient for mixing from mlt (cm^2/sec)
   !pressure_scale_height ! in Rsun units
   !dt_div_conv_tau ! min(1,dt*conv_vel/(scale_height/2))
   
   log_D_conv ! D_mix for regions where mix_type = convective_mixing
   log_D_soft ! D_mix for regions where mix_type = softened_convective_mixing
   log_D_semi ! D_mix for regions where mix_type = semiconvective_mixing
   log_D_ovr ! D_mix for regions where mix_type = overshoot_mixing
   log_D_thrm ! D_mix for regions where mix_type = thermohaline_mixing
   log_D_minimum ! D_mix for regions where mix_type = minimum_mixing
   log_D_anon ! D_mix for regions where mix_type = anonymous_mixing
   
   !gradT ! mlt value for required temperature gradient dlnT/dlnP
   !d_gradT_dlnd00
   !d_gradT_dlnT00
   !d_gradT_dlndm1
   !d_gradT_dlnTm1
   !d_gradT_dlnR
   !d_gradT_dL
   
   !actual_gradT ! actual temperature gradient dlnT/dlnP in model
   !gradT_sub_actual_gradT
   !grada_at_face_sub_actual_gradT

   gradr ! dlnT/dlnP required for purely radiative transport
   !grad_temperature ! smoothed dlnT/dlnP at cell boundary
   !grad_density ! smoothed dlnRho/dlnP at cell boundary
   
   !gradL ! gradient for Ledoux criterion for convection
   !sch_stable ! 1 if grada > gradr, 0 otherwise
   !ledoux_stable ! 1 if gradL > gradr, 0 otherwise
   
   !dominant_isoA_for_thermohaline
   !dominant_isoZ_for_thermohaline
   !gradL_composition_term
   
   !dlnd ! change of log(density) at fixed mass coordinate (Langranian)
   !dlnPgas ! change of log(Pgas) at fixed mass coordinate (Langranian)
   !dlnT ! change of log(temperature) at fixed mass coordinate (Langranian)
   !dlnR ! change of log(radius) at fixed mass coordinate (Langranian)
   
   mass ! m/Msun. mass coordinate of outer boundary of cell.
   !xm ! mass exterior to point (Msun units)
   !dq ! mass of zone as a fraction of total star mass
  
   !dr ! cell width (cm)
   !log_dr ! log10 cell width (cm)
   
   x ! hydrogen mass fraction
   y ! helium mass fraction
   z ! metallicity
      
   ! rotation
      !omega ! angular velocity = j_rot/i_rot
      !log_omega
      !log_j_rot
      !log_J_div_M53 ! J is j*1e-15 integrated from center; M53 is m^(5/3)
      !log_J_inside ! J_inside is j_rot integrated from center
      shear ! -dlnomega/dlnR
      !log_abs_shear ! log10(abs(dlnomega/dlnR))
      !richardson_number
      i_rot ! specific moment of inertia at cell boundary
      !j_rot ! specific angular momentum at cell boundary
      !v_rot ! rotation velocity at cell boundary (km/sec)
      !ft_rot_div_fp_rot ! gradr factor
      
      !omega_crit ! breakup angular velocity = sqrt(G M / equatorial^3)
      !omega_div_omega_crit
      
