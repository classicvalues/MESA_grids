'''
Take individual-Z plots generated by 02_plot_stellar_property_vs_age 
and merge them into a multi-page pdf document with pdftk.
Usage:
    >> python 03_merge_plots grid_id
Args:
    grid_id: a number of string specifying the grid from /mesa/data/grid_*
'''

import subprocess, argparse, os
import numpy as np

def run_script(script, stdin=None):
    """Returns (stdout, stderr), raises error on non-zero return code"""
    proc = subprocess.Popen(['bash', '-c', script],
        stdout=subprocess.PIPE, stderr=subprocess.PIPE,
        stdin=subprocess.PIPE)
    stdout, stderr = proc.communicate()
    #if proc.returncode:
    #    raise ScriptException(proc.returncode, stdout, stderr, script)
    return stdout, stderr

class ScriptException(Exception):
    def __init__(self, returncode, stdout, stderr, script):
        self.returncode = returncode
        self.stdout = stdout
        self.stderr = stderr
        Exception.__init__('Error in script')

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('arglist', nargs=1)
    a = parser.parse_args()
    plot_dir = '/home/luke/Dropbox/software/mesa/results/grid_'+\
        a.arglist[0]+'/plots/'
    all_plots = [f for f in os.listdir(plot_dir)]
    params = ['_'.join(q) for q in [s.split('_')[:-1] for s in all_plots]]
    Zs = np.unique([s.split('_')[-1:] for s in all_plots if 'merged' not in s])
    
    strings_to_pdftk = []
    for param in params:
        string_to_pdftk = ''
        for Z in Zs:
            sub = param+'_'+Z 
            string_to_pdftk = string_to_pdftk+plot_dir+sub+' '
        string_to_pdftk = string_to_pdftk+'output '+plot_dir+param+'_merged.pdf'
        strings_to_pdftk.append(string_to_pdftk)
    
    for s in strings_to_pdftk:
        runstr = 'pdftk '+s
        run_script(runstr)
    print('Made merged pdfs for all parameters and metal mass fracs.')

if __name__ == '__main__':
    main()
